// <auto-generated />
using System;
using DSDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DSDL.Migrations
{
    [DbContext(typeof(FannerDogsDBContext))]
    [Migration("20210523183314_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DSModels.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Breed")
                        .HasColumnType("text");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DSModels.DogBuyer", b =>
                {
                    b.Property<long>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("PhoneNumber");

                    b.ToTable("DogBuyers");
                });

            modelBuilder.Entity("DSModels.DogManager", b =>
                {
                    b.Property<long>("PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("PhoneNumber");

                    b.ToTable("DogManagers");
                });

            modelBuilder.Entity("DSModels.DogOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("BuyerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DogBuyerPhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int?>("StoreLocationId")
                        .HasColumnType("integer");

                    b.Property<double>("Total")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DogBuyerPhoneNumber");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("DogOrders");
                });

            modelBuilder.Entity("DSModels.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DogId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("DSModels.ManagesStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("DogManagerId")
                        .HasColumnType("bigint");

                    b.Property<int>("StoreLocationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DogManagerId");

                    b.HasIndex("StoreLocationId");

                    b.ToTable("ManagesStores");
                });

            modelBuilder.Entity("DSModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AssociatedOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("DogId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedOrderId");

                    b.HasIndex("DogId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DSModels.StoreLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoreLocations");
                });

            modelBuilder.Entity("DSModels.DogOrder", b =>
                {
                    b.HasOne("DSModels.DogBuyer", "DogBuyer")
                        .WithMany()
                        .HasForeignKey("DogBuyerPhoneNumber");

                    b.HasOne("DSModels.StoreLocation", "StoreLocation")
                        .WithMany()
                        .HasForeignKey("StoreLocationId");

                    b.Navigation("DogBuyer");

                    b.Navigation("StoreLocation");
                });

            modelBuilder.Entity("DSModels.Inventory", b =>
                {
                    b.HasOne("DSModels.Dog", "Dog")
                        .WithMany()
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSModels.StoreLocation", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DSModels.ManagesStore", b =>
                {
                    b.HasOne("DSModels.DogManager", "Manager")
                        .WithMany()
                        .HasForeignKey("DogManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSModels.StoreLocation", "Store")
                        .WithMany()
                        .HasForeignKey("StoreLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DSModels.OrderItem", b =>
                {
                    b.HasOne("DSModels.DogOrder", "AssociatedOrder")
                        .WithMany()
                        .HasForeignKey("AssociatedOrderId");

                    b.HasOne("DSModels.Dog", "Dog")
                        .WithMany()
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociatedOrder");

                    b.Navigation("Dog");
                });
#pragma warning restore 612, 618
        }
    }
}
